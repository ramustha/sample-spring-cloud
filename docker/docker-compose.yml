version: '3.8'
services:
  gateway-service:
    image: sample-spring-cloud/gateway-service
    container_name: gateway-service
    depends_on:
      - spring-cloud-fluent-bit
      - spring-cloud-keycloak
      - spring-cloud-redis
    ports:
      - "9000:9000"
    environment:
      - PRODUCT_SERVICE_URL=http://product-service:8002
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.12.1.jar
      - OTEL_SERVICE_NAME=gateway-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://spring-cloud-tempo:4317
      - SPRING_REDIS_HOST=spring-cloud-redis
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
  product-service:
    image: sample-spring-cloud/product-service
    container_name: product-service
    depends_on:
      - spring-cloud-fluent-bit
      - spring-cloud-mongodb
      - spring-cloud-keycloak
    ports:
      - "8002:8002"
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.12.1.jar
      - OTEL_SERVICE_NAME=product-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://spring-cloud-tempo:4317
      - SPRING_DATA_MONGODB_HOST=spring-cloud-mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=spring-cloud
      - SPRING_DATA_MONGODB_PASSWORD=spring-cloud
      - SPRING_DATA_MONGODB_DATABASE=spring-cloud
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

# backend

  spring-cloud-mongodb:
    image: mongo
    container_name: spring-cloud-mongodb
    environment:
      - MONGO_INITDB_DATABASE=spring-cloud
      - MONGO_INITDB_ROOT_USERNAME=spring-cloud
      - MONGO_INITDB_ROOT_PASSWORD=spring-cloud
    ports:
      - "27017:27017"
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
  spring-cloud-redis:
    image: redis:7
    container_name: spring-cloud-redis
    ports:
      - "6379:6379"
  spring-cloud-keycloak:
    image: quay.io/keycloak/keycloak:17.0.1-legacy
    container_name: spring-cloud-keycloak
    volumes:
      - ./platform/keycloak:/opt/jboss/keycloak/imports
    environment:
      - KEYCLOAK_USER=user
      - KEYCLOAK_PASSWORD=password
      - KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/realm-export.json
    ports:
      - "8080:8080"

# observability

  spring-cloud-grafana:
    image: grafana/grafana:8.4.4
    container_name: spring-cloud-grafana
    depends_on:
      - spring-cloud-loki
      - spring-cloud-prometheus
      - spring-cloud-tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./platform/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./platform/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./platform/grafana/grafana.ini:/etc/grafana/grafana.ini
  spring-cloud-loki:
    image: grafana/loki:2.4.2
    container_name: spring-cloud-loki
    depends_on:
      - spring-cloud-fluent-bit
    ports:
      - "3100:3100"
  spring-cloud-fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.4.2-amd64
    container_name: spring-cloud-fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://spring-cloud-loki:3100/loki/api/v1/push
    volumes:
      - ./platform/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
  spring-cloud-prometheus:
    image: prom/prometheus:v2.34.0
    container_name: spring-cloud-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./platform/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  spring-cloud-tempo:
    image: grafana/tempo:1.3.2
    container_name: spring-cloud-tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./platform/tempo/tempo.yml:/etc/tempo-config.yml
